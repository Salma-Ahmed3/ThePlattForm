// ignore_for_file: unnecessary_null_in_if_null_operators, prefer_null_aware_operators

import 'package:nowproject/cubit/generic_cubit/generic_cubit.dart';


class SelectedHourlyPricing {
  SelectedHourlyPricing({
    this.selectedPackages,
    this.packageProperties,
  });

  List<SelectedPackage>? selectedPackages;
  String? packageProperties;

  factory SelectedHourlyPricing.fromJson(Map<String, dynamic> json) => SelectedHourlyPricing(
    selectedPackages: json["selectedPackages"] == null ? null : List<SelectedPackage>.from(json["selectedPackages"].map((x) => SelectedPackage.fromJson(x))),
    packageProperties: json["packageProperties"] == null ? null : json["packageProperties"].toString().replaceAll("'", '"'),
  );

  Map<String, dynamic> toJson() => {
    "selectedPackages": selectedPackages == null ? null : List<dynamic>.from(selectedPackages!.map((x) => x.toJson())),
    "packageProperties": packageProperties ?? null,
  };
}

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class SelectedPackagePromotionOfferList {
/*
{
  "promotionOfferType": 4,
  "promotionDescription": "1 FreeVisit"
}
*/

  int? promotionOfferType;
  String? promotionDescription;

  SelectedPackagePromotionOfferList({
    this.promotionOfferType,
    this.promotionDescription,
  });
  SelectedPackagePromotionOfferList.fromJson(Map<String, dynamic> json) {
    promotionOfferType = json['promotionOfferType']?.toInt();
    promotionDescription = json['promotionDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['promotionOfferType'] = promotionOfferType;
    data['promotionDescription'] = promotionDescription;
    return data;
  }
}

class SelectedPackagePromotionState {
/*
{
  "promotionName": "زيارة مجانية",
  "promotionStatus": 2
}
*/

  String? promotionName;
  int? promotionStatus;

  SelectedPackagePromotionState({
    this.promotionName,
    this.promotionStatus,
  });
  SelectedPackagePromotionState.fromJson(Map<String, dynamic> json) {
    promotionName = json['promotionName']?.toString();
    promotionStatus = json['promotionStatus']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['promotionName'] = promotionName;
    data['promotionStatus'] = promotionStatus;
    return data;
  }
}

class SelectedPackage {
/*
{
  "selectedHourlyPricingId": "4eb8c31a-50c5-ec11-a82e-000d3a246f4f",
  "displayName": "زيارة تنظيف اسبوعية لمدة شهر",
  "serviceId": "1caf5938-4e06-eb11-a838-000d3abaded5",
  "resourceGroupId": "dec3b693-a952-ec11-9e0a-00155d640809",
  "resourceGroupName": "كينيا",
  "employeeNumber": 1,
  "employeeNumberName": "عاملة واحدة",
  "hoursNumber": 4,
  "weeklyVisits": 1,
  "weeklyVisitName": "1 زيارة اسبوعيا",
  "contractDuration": 4,
  "contractDurationName": "1 شهر",
  "visitShift": 1,
  "visitShiftName": "صباحي",
  "promotionCodeId": "924fbdd3-fed0-ec11-a82f-000d3a246f4f",
  "promotionCode": "F1",
  "promotionCodeDescription": "زيارة مجانية",
  "oneVisitPrice": 184.23,
  "totalVisits": 5,
  "visitHours": 4,
  "isAvaliable": true,
  "packagePrice": 712,
  "totalPriceWithVatBeforePromotion": 736.92,
  "packagePercentDiscount": 10,
  "packageDiscountAmount": 71.2,
  "packagePriceAfterPackageDiscount": 640.8,
  "promotionTotalDiscountAmount": 0,
  "promotionTotalDiscountPercent": 0,
  "totalDiscountPercent": 10,
  "totalDiscountAmount": 71.2,
  "priceAfterTotalDiscount": 640.8,
  "freeVisitsCount": 1,
  "promotionEndDate": "01/04/2023",
  "promotionState": {
    "promotionName": "زيارة مجانية",
    "promotionStatus": 2
  },
  "vatRate": 15,
  "vatAmount": 96.12,
  "finalPrice": 736.92,
  "promotionOfferList": [
    {
      "promotionOfferType": 4,
      "promotionDescription": "1 FreeVisit"
    }
  ]
}
*/
  GenericCubit<bool> state= GenericCubit<bool>(data: false);
  String? selectedHourlyPricingId;
  String? displayName;
  String? serviceId;
  String? timeSlotDisplayName;
  String? timeSlotId;
  String? resourceGroupId;
  String? resourceGroupName;
  Map<String ,dynamic>?jsonPackage;
  int? employeeNumber;
  String? employeeNumberName;
  int? hoursNumber;
  int? weeklyVisits;
  String? weeklyVisitName;
  int? contractDuration;
  String? contractDurationName;
  int? visitShift;
  String? visitShiftName;
  String? promotionCodeId;
  String? promotionCode;
  String? promotionCodeDescription;
  double? oneVisitPrice;
  int? totalVisits;
  int? visitHours;
  bool? isAvaliable;
  int? packagePrice;
  double? totalPriceWithVatBeforePromotion;
  int? packagePercentDiscount;
  double? packageDiscountAmount;
  double? packagePriceAfterPackageDiscount;
  int? promotionTotalDiscountAmount;
  int? promotionTotalDiscountPercent;
  int? totalDiscountPercent;
  double? totalDiscountAmount;
  double? priceAfterTotalDiscount;
  int? freeVisitsCount;
  String? promotionEndDate;
  SelectedPackagePromotionState? promotionState;
  int? vatRate;
  double? vatAmount;
  double? finalPrice;
  List<SelectedPackagePromotionOfferList?>? promotionOfferList;
  bool? isActive;

  SelectedPackage({
    this.selectedHourlyPricingId,
    this.displayName,
    this.serviceId,
    this.timeSlotId,
    this.timeSlotDisplayName,
    this.resourceGroupId,
    this.resourceGroupName,
    this.employeeNumber,
    this.employeeNumberName,
    this.hoursNumber,
    this.jsonPackage,
    this.weeklyVisits,
    this.weeklyVisitName,
    this.contractDuration,
    this.contractDurationName,
    this.visitShift,
    this.visitShiftName,
    this.promotionCodeId,
    this.promotionCode,
    this.promotionCodeDescription,
    this.oneVisitPrice,
    this.totalVisits,
    this.visitHours,
    this.isAvaliable,
    this.packagePrice,
    this.totalPriceWithVatBeforePromotion,
    this.packagePercentDiscount,
    this.packageDiscountAmount,
    this.packagePriceAfterPackageDiscount,
    this.promotionTotalDiscountAmount,
    this.promotionTotalDiscountPercent,
    this.totalDiscountPercent,
    this.totalDiscountAmount,
    this.priceAfterTotalDiscount,
    this.freeVisitsCount,
    this.promotionEndDate,
    this.promotionState,
    this.vatRate,
    this.vatAmount,
    this.finalPrice,
    this.promotionOfferList,
    this.isActive,
    required this.state
  });
  SelectedPackage.fromJson(Map<String, dynamic> json) {
    jsonPackage= json;
    state= GenericCubit<bool>(data: false);
    selectedHourlyPricingId = json['selectedHourlyPricingId']?.toString();
    displayName = json['displayName']?.toString();
    serviceId = json['serviceId']?.toString();
    timeSlotId = json['timeSlotId']?.toString();
    timeSlotDisplayName = json['timeSlotDisplayName']?.toString();
    resourceGroupId = json['resourceGroupId']?.toString();
    resourceGroupName = json['resourceGroupName']?.toString();
    employeeNumber = json['employeeNumber']?.toInt();
    employeeNumberName = json['employeeNumberName']?.toString();
    hoursNumber = json['hoursNumber']?.toInt();
    weeklyVisits = json['weeklyVisits']?.toInt();
    weeklyVisitName = json['weeklyVisitName']?.toString();
    contractDuration = json['contractDuration']?.toInt();
    contractDurationName = json['contractDurationName']?.toString();
    visitShift = json['visitShift']?.toInt();
    visitShiftName = json['visitShiftName']?.toString();
    promotionCodeId = json['promotionCodeId']?.toString();
    promotionCode = json['promotionCode']?.toString();
    promotionCodeDescription = json['promotionCodeDescription']?.toString();
    oneVisitPrice = json['oneVisitPrice']?.toDouble();
    totalVisits = json['totalVisits']?.toInt();
    visitHours = json['visitHours']?.toInt();
    isAvaliable = json['isAvaliable'];
    packagePrice = json['packagePrice']?.toInt();
    totalPriceWithVatBeforePromotion = json['totalPriceWithVatBeforePromotion']?.toDouble();
    packagePercentDiscount = json['packagePercentDiscount']?.toInt();
    packageDiscountAmount = json['packageDiscountAmount']?.toDouble();
    packagePriceAfterPackageDiscount = json['packagePriceAfterPackageDiscount']?.toDouble();
    promotionTotalDiscountAmount = json['promotionTotalDiscountAmount']?.toInt();
    promotionTotalDiscountPercent = json['promotionTotalDiscountPercent']?.toInt();
    totalDiscountPercent = json['totalDiscountPercent']?.toInt();
    totalDiscountAmount = json['totalDiscountAmount']?.toDouble();
    priceAfterTotalDiscount = json['priceAfterTotalDiscount']?.toDouble();
    freeVisitsCount = json['freeVisitsCount']?.toInt();
    promotionEndDate = json['promotionEndDate']?.toString();
    promotionState = (json['promotionState'] != null) ? SelectedPackagePromotionState.fromJson(json['promotionState']) : null;
    vatRate = json['vatRate']?.toInt();
    vatAmount = json['vatAmount']?.toDouble();
    finalPrice = json['finalPrice']?.toDouble();
    isActive = json['isActive']?? false;

    if (json['promotionOfferList'] != null) {
      final v = json['promotionOfferList'];
      final arr0 = <SelectedPackagePromotionOfferList>[];
      v.forEach((v) {
        arr0.add(SelectedPackagePromotionOfferList.fromJson(v));
      });
      promotionOfferList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['selectedHourlyPricingId'] = selectedHourlyPricingId;
    data['displayName'] = displayName;
    data['serviceId'] = serviceId;
    data['timeSlotId'] = timeSlotId;
    data['timeSlotDisplayName'] = timeSlotDisplayName;
    data['resourceGroupId'] = resourceGroupId;
    data['resourceGroupName'] = resourceGroupName;
    data['employeeNumber'] = employeeNumber;
    data['employeeNumberName'] = employeeNumberName;
    data['hoursNumber'] = hoursNumber;
    data['weeklyVisits'] = weeklyVisits;
    data['weeklyVisitName'] = weeklyVisitName;
    data['contractDuration'] = contractDuration;
    data['contractDurationName'] = contractDurationName;
    data['visitShift'] = visitShift;
    data['visitShiftName'] = visitShiftName;
    data['promotionCodeId'] = promotionCodeId;
    data['promotionCode'] = promotionCode;
    data['promotionCodeDescription'] = promotionCodeDescription;
    data['oneVisitPrice'] = oneVisitPrice;
    data['totalVisits'] = totalVisits;
    data['visitHours'] = visitHours;
    data['isAvaliable'] = isAvaliable;
    data['packagePrice'] = packagePrice;
    data['totalPriceWithVatBeforePromotion'] = totalPriceWithVatBeforePromotion;
    data['packagePercentDiscount'] = packagePercentDiscount;
    data['packageDiscountAmount'] = packageDiscountAmount;
    data['packagePriceAfterPackageDiscount'] = packagePriceAfterPackageDiscount;
    data['promotionTotalDiscountAmount'] = promotionTotalDiscountAmount;
    data['promotionTotalDiscountPercent'] = promotionTotalDiscountPercent;
    data['totalDiscountPercent'] = totalDiscountPercent;
    data['totalDiscountAmount'] = totalDiscountAmount;
    data['priceAfterTotalDiscount'] = priceAfterTotalDiscount;
    data['freeVisitsCount'] = freeVisitsCount;
    data['promotionEndDate'] = promotionEndDate;
    data['isActive'] = isActive ?? false;

    if (promotionState != null) {
      data['promotionState'] = promotionState!.toJson();
    }
    data['vatRate'] = vatRate;
    data['vatAmount'] = vatAmount;
    data['finalPrice'] = finalPrice;
    if (promotionOfferList != null) {
      final v = promotionOfferList;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['promotionOfferList'] = arr0;
    }
    return data;
  }
}

